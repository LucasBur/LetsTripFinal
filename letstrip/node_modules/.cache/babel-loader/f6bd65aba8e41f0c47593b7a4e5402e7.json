{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Forms/Inscription/Register.js\";\nimport React from 'react';\nimport auth from '../../../auth';\nimport Button from 'react-bootstrap/Button';\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport '../../../styles/Register_styles.css';\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.signupSubmit = async values => {\n      try {\n        await auth.signup(values);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        pseudo: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        this.signupSubmit(values);\n        resetForm();\n        setSubmitting(false);\n      },\n      validationSchema: Yup.object().shape({\n        pseudo: Yup.string().required(\"Pseudo requis.\").min(2, \"2 caractères minimum\"),\n        firstname: Yup.string().required(\"Prénom requis.\").min(2, \"2 caractères minimum\"),\n        lastname: Yup.string().required(\"Nom de famille requis.\").min(2, \"2 caractères minimum\"),\n        email: Yup.string().email('Email non valide').required(\"Email requis\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return React.createElement(\"div\", {\n        className: \"homepage-register-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Rejoignez-nous\"), React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register-form-global-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"pseudo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Pseudo\"), React.createElement(\"input\", {\n        name: \"pseudo\",\n        type: \"text\",\n        value: values.pseudo,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.pseudo && touched.pseudo && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), errors.pseudo && touched.pseudo && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, errors.pseudo), React.createElement(\"label\", {\n        htmlFor: \"lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Nom de Famille\"), React.createElement(\"input\", {\n        name: \"lastname\",\n        type: \"text\",\n        value: values.lastname,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.lastname && touched.lastname && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), errors.lastname && touched.lastname && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, errors.lastname), React.createElement(\"label\", {\n        htmlFor: \"firstname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Pr\\xE9nom\"), React.createElement(\"input\", {\n        name: \"firstname\",\n        type: \"text\",\n        value: values.firstname,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.firstname && touched.firstname && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), errors.firstname && touched.firstname && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, errors.firstname)), React.createElement(\"div\", {\n        className: \"register-form-emailpw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), errors.email && touched.email && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, errors.email), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), errors.password && touched.password && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, errors.password))), React.createElement(\"div\", {\n        className: \"register-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.props.registerFormProps,\n        variant: \"secondary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Vous \\xEAtes d\\xE9j\\xE0 membre ?\"), React.createElement(Button, {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Login\"))));\n    });\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Forms/Inscription/Register.js"],"names":["React","auth","Button","Yup","Formik","Register","Component","signupSubmit","values","signup","error","console","log","render","pseudo","firstname","lastname","email","password","setSubmitting","resetForm","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","textAlign","registerFormProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport auth from '../../../auth';\nimport Button from 'react-bootstrap/Button'\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport '../../../styles/Register_styles.css'\n\nclass Register extends React.Component {\n    signupSubmit = async (values) => {\n        try {\n            await auth.signup(values)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    render() {\n        return (\n            <Formik\n                initialValues={{ pseudo: \"\", firstname: \"\", lastname: \"\", email: \"\", password: \"\" }}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                    this.signupSubmit(values)\n                    resetForm();\n                    setSubmitting(false);\n                }}\n                validationSchema={Yup.object().shape({\n                    pseudo: Yup.string().required(\"Pseudo requis.\")\n                        .min(2, \"2 caractères minimum\"),\n                    firstname: Yup.string().required(\"Prénom requis.\")\n                        .min(2, \"2 caractères minimum\"),\n                    lastname: Yup.string().required(\"Nom de famille requis.\")\n                        .min(2, \"2 caractères minimum\"),\n                    email: Yup.string()\n                        .email('Email non valide')\n                        .required(\"Email requis\"),\n                    password: Yup.string()\n                        .required(\"No password provided.\")\n                        .min(8, \"Password is too short - should be 8 chars minimum.\")\n                        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n                })}>\n\n                {props => {\n                    const { values, touched,\n                        errors, isSubmitting,\n                        handleChange, handleBlur,\n                        handleSubmit } = props;\n                    return (\n                        <div className=\"homepage-register-form\">\n                            <h3 style={{ textAlign: 'center' }}>Rejoignez-nous</h3>\n                            <form onSubmit={handleSubmit} className=\"register-form\">\n                                <div className='register-form-global-div'>\n                                    <div>\n                                        <label htmlFor=\"pseudo\">Pseudo</label>\n                                        <input\n                                            name=\"pseudo\"\n                                            type=\"text\"\n                                            value={values.pseudo}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={errors.pseudo && touched.pseudo && \"error\"} />\n                                        {errors.pseudo && touched.pseudo && (\n                                            <div className=\"input-feedback\">{errors.pseudo}</div>\n                                        )}\n\n\n                                        <label htmlFor=\"lastname\">Nom de Famille</label>\n                                        <input\n                                            name=\"lastname\"\n                                            type=\"text\"\n                                            value={values.lastname}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={errors.lastname && touched.lastname && \"error\"} />\n                                        {errors.lastname && touched.lastname && (\n                                            <div className=\"input-feedback\">{errors.lastname}</div>\n                                        )}\n\n\n                                        <label htmlFor=\"firstname\">Prénom</label>\n                                        <input\n                                            name=\"firstname\"\n                                            type=\"text\"\n                                            value={values.firstname}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={errors.firstname && touched.firstname && \"error\"} />\n                                        {errors.firstname && touched.firstname && (\n                                            <div className=\"input-feedback\">{errors.firstname}</div>\n                                        )}\n                                    </div>\n\n                                    <div className='register-form-emailpw'>\n\n                                        <label htmlFor=\"email\">Email</label>\n                                        <input\n                                            name=\"email\"\n                                            type=\"text\"\n                                            value={values.email}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={errors.email && touched.email && \"error\"} />\n                                        {errors.email && touched.email && (\n                                            <div className=\"input-feedback\">{errors.email}</div>\n                                        )}\n\n\n                                        <label htmlFor=\"email\">Password</label>\n                                        <input\n                                            name=\"password\"\n                                            type=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={errors.password && touched.password && \"error\"} />\n                                        {errors.password && touched.password && (\n                                            <div className=\"input-feedback\">{errors.password}</div>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <div className='register-form-button'>\n                                    <Button onClick={this.props.registerFormProps}\n                                        variant=\"secondary\"\n                                        size=\"sm\">Vous êtes déjà membre ?</Button>\n                                    <Button type=\"submit\" disabled={isSubmitting}>\n                                        Login\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                    );\n                }}\n            </Formik>\n\n\n        )\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}