{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from \"react-router-dom\";\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      pseudo: '',\n      lastName: '',\n      firstName: '',\n      email: '',\n      password: '',\n      errors: {\n        pseudo: '',\n        lastName: '',\n        firstName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let errors = this.state.errors;\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'fullName':\n        errors.fullName = value.length < 5 ? 'Full Name must be 5 characters long!' : '';\n        break;\n\n      case 'email':\n        errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n        break;\n\n      case 'password':\n        errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      errors,\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const newInscription = {\n      pseudo: this.state.pseudo,\n      firstName: this.state.firstName,\n      lastname: this.state.lastName,\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.setState({\n      pseudo: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    });\n    console.log(newInscription);\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Rejoignez-nous\"), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      name: \"pseudo\",\n      type: \"name\",\n      placeholder: \"Pseudo *\",\n      value: this.state.pseudo,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      name: \"firstName\",\n      type: \"name\",\n      placeholder: \"Pr\\xE9nom *\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      name: \"lastName\",\n      type: \"name\",\n      placeholder: \"Nom *\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"E-mail *\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password *\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Inscription\"), React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Vous \\xEAtes d\\xE9j\\xE0 membre ?\"));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js"],"names":["React","Form","Button","NavLink","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","Register","Component","constructor","props","handleChange","bind","handleSubmit","state","pseudo","lastName","firstName","email","password","event","preventDefault","name","value","target","fullName","test","setState","newInscription","lastname","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach(\n    (val) => val.length > 0 && (valid = false)\n  );\n  return valid;\n}\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.state = {\n            pseudo: '',\n            lastName: '',\n            firstName: '',\n            email: '',\n            password: '',\n            errors : {\n                pseudo: '',\n                lastName: '',\n                firstName: '',\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        let errors = this.state.errors\n        const { name, value } = event.target;\n        switch (name) {\n            case 'fullName': \n              errors.fullName = \n                value.length < 5\n                  ? 'Full Name must be 5 characters long!'\n                  : '';\n              break;\n            case 'email': \n              errors.email = \n                validEmailRegex.test(value)\n                  ? ''\n                  : 'Email is not valid!';\n              break;\n            case 'password': \n              errors.password = \n                value.length < 8\n                  ? 'Password must be 8 characters long!'\n                  : '';\n              break;\n            default:\n              break;\n          }\n      \n          this.setState({errors, [name]: value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const newInscription = {\n            pseudo: this.state.pseudo,\n            firstName: this.state.firstName,\n            lastname: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.setState({\n            pseudo: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: ''\n        })\n        console.log(newInscription)\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <h3>Rejoignez-nous</h3>\n                <Form.Group>\n                    <Form.Control \n                        name='pseudo' \n                        type=\"name\" \n                        placeholder=\"Pseudo *\" \n                        value={this.state.pseudo} \n                        onChange={this.handleChange} />\n                    <Form.Control \n                        name='firstName' \n                        type=\"name\" \n                        placeholder=\"Prénom *\" \n                        value={this.state.firstName} \n                        onChange={this.handleChange} />\n                    <Form.Control \n                        name='lastName' \n                        type=\"name\" \n                        placeholder=\"Nom *\" \n                        value={this.state.lastName} \n                        onChange={this.handleChange} />\n                    <Form.Control \n                        name='email' \n                        type=\"email\" \n                        placeholder=\"E-mail *\" \n                        value={this.state.email} \n                        onChange={this.handleChange} />\n                    <Form.Control \n                        name='password' \n                        type=\"password\" \n                        placeholder=\"Password *\" \n                        value={this.state.password} \n                        onChange={this.handleChange} />\n                </Form.Group>\n\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Inscription\n                </Button>\n\n                <NavLink to='/'>Vous êtes déjà membre ?</NavLink>\n            </Form>\n        )\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}