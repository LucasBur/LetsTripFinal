{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Forms/Login/Login.js\";\nimport React from 'react';\nimport auth from '../../../auth';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport connect from \"../../../design/icons/lock-solid.svg\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loginSubmit = async values => {\n      // try {\n      //     const {data} = await auth.login(values);\n      //     // console.log(data)\n      // } catch (error) {\n      //     console.log(error)\n      // }\n      await auth.login(values);\n    };\n\n    this.loginSubmit = this.loginSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        this.loginSubmit(values);\n        resetForm();\n        setSubmitting(false);\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Email non valide').required(\"Email requis\"),\n        password: Yup.string().required(\"No password provided.\")\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Connectez-vous \", React.createElement(\"img\", {\n      src: connect,\n      alt: \"connect\",\n      width: \"30\",\n      height: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \" \"), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"formLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(Form.Control, {\n      style: {\n        backgroundColor: '#ECECEC'\n      },\n      type: \"text\",\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), errors.email && touched.email && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, errors.email), React.createElement(Form.Label, {\n      className: \"formLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Mot de passe\"), React.createElement(Form.Control, {\n      style: {\n        backgroundColor: '#ECECEC'\n      },\n      type: \"password\",\n      name: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password && \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, errors.password)), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Valider\"), React.createElement(Button, {\n      onClick: this.props.registerForm,\n      variant: \"secondary\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"cr\\xE9ez un compte\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Forms/Login/Login.js"],"names":["React","auth","Formik","Yup","Form","Button","Login","Component","constructor","props","loginSubmit","values","login","bind","render","email","password","setSubmitting","resetForm","object","shape","string","required","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","connect","backgroundColor","registerForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport auth from '../../../auth'\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport connect from '../../../design/icons/lock-solid.svg';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.loginSubmit = this.loginSubmit.bind(this);\n    }\n\n    loginSubmit = async (values) => {\n        // try {\n        //     const {data} = await auth.login(values);\n        //     // console.log(data)\n        // } catch (error) {\n        //     console.log(error)\n        // }\n        await auth.login(values)\n    }\n\n    render() {\n        return (\n            <Formik\n                initialValues={{ email: \"\", password: \"\" }}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                    this.loginSubmit(values)\n                    resetForm();\n                    setSubmitting(false);\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                        .email('Email non valide')\n                        .required(\"Email requis\"),\n                    password: Yup.string()\n                        .required(\"No password provided.\")\n                })}>\n                {({\n                    values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting\n                }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <h3>Connectez-vous <img src={connect} alt='connect' width=\"30\" height='30'></img> </h3>\n                            <Form.Group>\n                                <Form.Label className='formLabel'>E-mail</Form.Label>\n                                <Form.Control\n                                    style={{ backgroundColor: '#ECECEC' }}\n                                    type='text'\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">{errors.email}</div>\n                                )}\n\n                                <Form.Label className='formLabel'>Mot de passe</Form.Label>\n                                <Form.Control\n                                    style={{ backgroundColor: '#ECECEC' }}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={errors.password && touched.password && \"error\"} />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">{errors.password}</div>\n                                )}\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                Valider\n                            </Button>\n                            <Button\n                                onClick={this.props.registerForm}\n                                variant=\"secondary\"\n                                size=\"sm\">créez un compte\n                            </Button>\n                        </Form>\n                    )}\n            </Formik>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}