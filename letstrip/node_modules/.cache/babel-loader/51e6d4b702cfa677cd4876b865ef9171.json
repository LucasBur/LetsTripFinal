{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"homepage-register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Rejoignez-nous\"), React.createElement(Formik, {\n      initialValues: {\n        pseudo: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      },\n      validationSchema: Yup.object().shape({\n        pseudo: Yup.string().required(\"Pseudo requis.\").min(2, \"2 caractères minimum\"),\n        firstname: Yup.string().required(\"Prénom requis.\").min(2, \"2 caractères minimum\"),\n        lastname: Yup.string().required(\"Nom de famille requis.\").min(2, \"2 caractères minimum\"),\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"pseudo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Pseudo\"), React.createElement(\"input\", {\n        name: \"pseudo\",\n        type: \"text\",\n        placeholder: \"Entrer votre pseudo\",\n        value: values.pseudo,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.pseudo && touched.pseudo && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), errors.pseudo && touched.pseudo && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, errors.pseudo), React.createElement(\"label\", {\n        htmlFor: \"lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Nom de Famille\"), React.createElement(\"input\", {\n        name: \"lastname\",\n        type: \"text\",\n        placeholder: \"Entrer votre nom de famille\",\n        value: values.lastname,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.lastname && touched.lastname && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), errors.lastname && touched.lastname && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, errors.lastname), React.createElement(\"label\", {\n        htmlFor: \"firstname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Pr\\xE9nom\"), React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), errors.email && touched.email && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, errors.email), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), errors.email && touched.email && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, errors.email), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), errors.password && touched.password && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, errors.password), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Login\"));\n    }), React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Vous \\xEAtes d\\xE9j\\xE0 membre ?\"));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js"],"names":["React","Form","Button","Yup","Formik","NavLink","Register","Component","constructor","props","render","textAlign","pseudo","firstname","lastname","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"homepage-register-form\">\n                <h3 style={{ textAlign: 'center' }}>Rejoignez-nous</h3>\n\n                <Formik\n                    initialValues={{ pseudo: \"\", firstname: \"\", lastname: \"\", email: \"\", password: \"\" }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            console.log(\"Logging in\", values);\n                            setSubmitting(false);\n                        }, 500);\n                    }}\n                    validationSchema={Yup.object().shape({\n                        pseudo: Yup.string().required(\"Pseudo requis.\")\n                            .min(2, \"2 caractères minimum\"),\n                        firstname: Yup.string().required(\"Prénom requis.\")\n                            .min(2, \"2 caractères minimum\"),\n                        lastname: Yup.string().required(\"Nom de famille requis.\")\n                            .min(2, \"2 caractères minimum\"),\n                        email: Yup.string()\n                            .email()\n                            .required(\"Required\"),\n                        password: Yup.string()\n                            .required(\"No password provided.\")\n                            .min(8, \"Password is too short - should be 8 chars minimum.\")\n                            .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n                    })}>\n\n                    {props => { const { values, touched, errors, isSubmitting, handleChange, handleBlur, handleSubmit } = props;\n                        return (\n                            <form onSubmit={handleSubmit}>\n                                <label htmlFor=\"pseudo\">Pseudo</label>\n                                <input\n                                    name=\"pseudo\"\n                                    type=\"text\"\n                                    placeholder=\"Entrer votre pseudo\"\n                                    value={values.pseudo}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={errors.pseudo && touched.pseudo && \"error\"} />\n                                {errors.pseudo && touched.pseudo && (\n                                    <div className=\"input-feedback\">{errors.pseudo}</div>\n                                )}\n\n\n                                <label htmlFor=\"lastname\">Nom de Famille</label>\n                                <input\n                                    name=\"lastname\"\n                                    type=\"text\"\n                                    placeholder=\"Entrer votre nom de famille\"\n                                    value={values.lastname}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={errors.lastname && touched.lastname && \"error\"} />\n                                {errors.lastname && touched.lastname && (\n                                    <div className=\"input-feedback\">{errors.lastname}</div>\n                                )}\n\n\n                                <label htmlFor=\"firstname\">Prénom</label>\n                                <input\n                                    name=\"email\"\n                                    type=\"text\"\n                                    placeholder=\"Enter your email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={errors.email && touched.email && \"error\"}\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">{errors.email}</div>\n                                )}\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                    name=\"email\"\n                                    type=\"text\"\n                                    placeholder=\"Enter your email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={errors.email && touched.email && \"error\"}\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">{errors.email}</div>\n                                )}\n                                <label htmlFor=\"email\">Password</label>\n                                <input\n                                    name=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Enter your password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={errors.password && touched.password && \"error\"}\n                                />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">{errors.password}</div>\n                                )}\n                                <button type=\"submit\" disabled={isSubmitting}>\n                                    Login\n                              </button>\n                            </form>\n                        );\n                    }}\n                </Formik>\n                <NavLink to='/'>Vous êtes déjà membre ?</NavLink>\n            </div>\n\n\n        )\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}