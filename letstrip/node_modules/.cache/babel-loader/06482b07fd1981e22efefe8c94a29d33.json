{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"homepage-register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Rejoignez-nous\"), React.createElement(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), errors.email && touched.email && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, errors.email), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), errors.password && touched.password && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, errors.password), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Login\"));\n    }), React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Vous \\xEAtes d\\xE9j\\xE0 membre ?\"));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js"],"names":["React","Form","Button","Yup","Formik","NavLink","Register","Component","constructor","props","render","textAlign","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"homepage-register-form\">\n                <h3 style={{ textAlign: 'center' }}>Rejoignez-nous</h3>\n\n                <Formik\n                    initialValues={{ email: \"\", password: \"\" }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            console.log(\"Logging in\", values);\n                            setSubmitting(false);\n                        }, 500);\n                    }}\n                    validationSchema={Yup.object().shape({\n                        email: Yup.string()\n                            .email()\n                            .required(\"Required\"),\n                        password: Yup.string()\n                            .required(\"No password provided.\")\n                            .min(8, \"Password is too short - should be 8 chars minimum.\")\n                            .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n                    })}\n                >\n                    {props => { const {\n                            values,\n                            touched,\n                            errors,\n                            isSubmitting,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit\n                        } = props;\n                        return (\n                            <form onSubmit={handleSubmit}>\n                              <label htmlFor=\"email\">Email</label>\n                              <input\n                                name=\"email\"\n                                type=\"text\"\n                                placeholder=\"Enter your email\"\n                                value={values.email}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={errors.email && touched.email && \"error\"}\n                              />\n                              {errors.email && touched.email && (\n                                <div className=\"input-feedback\">{errors.email}</div>\n                              )}\n                              <label htmlFor=\"email\">Password</label>\n                              <input\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Enter your password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={errors.password && touched.password && \"error\"}\n                              />\n                              {errors.password && touched.password && (\n                                <div className=\"input-feedback\">{errors.password}</div>\n                              )}\n                              <button type=\"submit\" disabled={isSubmitting}>\n                                Login\n                              </button>\n                            </form>\n                          );\n                      }}\n                    </Formik>\n\n\n                        <NavLink to='/'>Vous êtes déjà membre ?</NavLink>\n            </div>\n\n\n                )\n            }\n        }\n        \nexport default Register;"]},"metadata":{},"sourceType":"module"}