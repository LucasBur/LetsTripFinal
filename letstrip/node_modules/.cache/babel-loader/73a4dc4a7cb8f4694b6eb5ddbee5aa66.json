{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      pseudo: '',\n      lastName: '',\n      firstName: '',\n      email: '',\n      password: '',\n      errors: {\n        pseudo: '',\n        lastName: '',\n        firstName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let errors = this.state.errors;\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'pseudo':\n        errors.pseudo = value.length < 2 ? 'Votre pseudo doit contenir au moins 2 lettres' : '';\n        break;\n\n      case 'firstName':\n        errors.firstName = value.length < 2 ? 'Votre prénom doit contenir au moins 2 lettres' : '';\n        break;\n\n      case 'lastName':\n        errors.lastName = value.length < 2 ? 'Votre nom de famille doit contenir au moins 2 lettres' : '';\n        break;\n\n      case 'email':\n        errors.email = validEmailRegex.test(value) ? '' : 'Entrer un e-mail valide';\n        break;\n\n      case 'password':\n        errors.password = value.length < 8 ? '8 caractères minimum pour le mot de passe' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      errors,\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const newInscription = {\n      pseudo: this.state.pseudo,\n      firstName: this.state.firstName,\n      lastname: this.state.lastName,\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    if (validateForm(this.state.errors)) {\n      console.log('Valide :', newInscription);\n    } else {\n      console.error('Invalid Form');\n    }\n\n    this.setState({\n      pseudo: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    });\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"homepage-register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Rejoignez-nous\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      className: \"homepage-register-formGroup-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      name: \"pseudo\",\n      type: \"name\",\n      placeholder: \"Pseudo *\",\n      value: this.state.pseudo,\n      onChange: this.handleChange,\n      noValidate: true,\n      style: {\n        width: \"350px\",\n        border: \"1px solid red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), errors.pseudo.length > 0 && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, errors.pseudo), React.createElement(Form.Control, {\n      name: \"firstName\",\n      type: \"name\",\n      placeholder: \"Pr\\xE9nom *\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), errors.firstName.length > 0 && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, errors.firstName), React.createElement(Form.Control, {\n      name: \"lastName\",\n      type: \"name\",\n      placeholder: \"Nom *\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), errors.lastName.length > 0 && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, errors.lastName)), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"E-mail *\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      noValidate: true,\n      style: {\n        width: \"350px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), errors.email.length > 0 && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, errors.email), React.createElement(Form.Control, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password *\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), errors.password.length > 0 && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, errors.password), React.createElement(Form.Control, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password *\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), errors.password.length > 0 && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, errors.password))), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Inscription\"), React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Vous \\xEAtes d\\xE9j\\xE0 membre ?\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/valentinwachedecorbie/Documents/Projets/LetsTripFinal/letstrip/src/components/Inscription/Register.js"],"names":["React","Form","Button","NavLink","Register","Component","constructor","props","handleChange","bind","handleSubmit","state","pseudo","lastName","firstName","email","password","errors","event","preventDefault","name","value","target","length","validEmailRegex","test","setState","newInscription","lastname","validateForm","console","log","error","render","textAlign","width","border"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.state = {\n            pseudo: '',\n            lastName: '',\n            firstName: '',\n            email: '',\n            password: '',\n            errors: {\n                pseudo: '',\n                lastName: '',\n                firstName: '',\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        let errors = this.state.errors\n        const { name, value } = event.target;\n        switch (name) {\n            case 'pseudo':\n                errors.pseudo =\n                    value.length < 2\n                        ? 'Votre pseudo doit contenir au moins 2 lettres'\n                        : '';\n                break;\n            case 'firstName':\n                errors.firstName =\n                    value.length < 2\n                        ? 'Votre prénom doit contenir au moins 2 lettres'\n                        : '';\n                break;\n            case 'lastName':\n                errors.lastName =\n                    value.length < 2\n                        ? 'Votre nom de famille doit contenir au moins 2 lettres'\n                        : '';\n                break;\n            case 'email':\n                errors.email =\n                    validEmailRegex.test(value)\n                        ? ''\n                        : 'Entrer un e-mail valide';\n                break;\n            case 'password':\n                errors.password =\n                    value.length < 8\n                        ? '8 caractères minimum pour le mot de passe'\n                        : '';\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const newInscription = {\n            pseudo: this.state.pseudo,\n            firstName: this.state.firstName,\n            lastname: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n        }\n        if (validateForm(this.state.errors)) {\n            console.log('Valide :', newInscription)\n        } else {\n            console.error('Invalid Form')\n        }\n        this.setState({\n            pseudo: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: ''\n        })\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"homepage-register-form\">\n                <h3 style={{ textAlign: 'center' }}>Rejoignez-nous</h3>\n\n\n                <Form onSubmit={this.handleSubmit}>\n\n\n                    <Form.Group className=\"homepage-register-formGroup-form\">\n\n                        <Form.Group>\n                            <Form.Control\n                                name='pseudo'\n                                type=\"name\"\n                                placeholder=\"Pseudo *\"\n                                value={this.state.pseudo}\n                                onChange={this.handleChange}\n                                noValidate \n                                style={{width: \"350px\", border: \"1px solid red\"}}/>\n                            {errors.pseudo.length > 0 &&\n                                <Form.Text className=\"text-muted\">{errors.pseudo}</Form.Text>\n                            }\n                            {/* <Form.Text className=\"text-muted\">votre pseudo doit avoir 2 qzdqrr fssq zqdsdzqsdq</Form.Text> */}\n\n                            <Form.Control\n                                name='firstName'\n                                type=\"name\"\n                                placeholder=\"Prénom *\"\n                                value={this.state.firstName}\n                                onChange={this.handleChange}\n                                noValidate />\n                            {errors.firstName.length > 0 &&\n                                <Form.Text className=\"text-muted\">{errors.firstName}</Form.Text>}\n\n\n                            <Form.Control\n                                name='lastName'\n                                type=\"name\"\n                                placeholder=\"Nom *\"\n                                value={this.state.lastName}\n                                onChange={this.handleChange}\n                                noValidate />\n                            {errors.lastName.length > 0 &&\n                                <Form.Text className=\"text-muted\">{errors.lastName}</Form.Text>}\n                        </Form.Group>\n\n\n                        <Form.Group>\n                            <Form.Control\n                                name='email'\n                                type=\"email\"\n                                placeholder=\"E-mail *\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                                noValidate \n                                style={{width: \"350px\"}}/>\n                            {errors.email.length > 0 &&\n                                <Form.Text className=\"text-muted\">{errors.email}</Form.Text>}\n                     \n                                <Form.Control\n                                    name='password'\n                                    type=\"password\"\n                                    placeholder=\"Password *\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    noValidate />\n                                {errors.password.length > 0 &&\n                                    <Form.Text className=\"text-muted\">{errors.password}</Form.Text>}\n                          \n                        \n                                <Form.Control\n                                    name='password'\n                                    type=\"password\"\n                                    placeholder=\"Password *\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    noValidate />\n                                {errors.password.length > 0 &&\n                                    <Form.Text className=\"text-muted\">{errors.password}</Form.Text>}\n                        </Form.Group>\n\n                    </Form.Group>\n\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Inscription\n                    </Button>\n\n                    <NavLink to='/'>Vous êtes déjà membre ?</NavLink>\n                </Form>\n            </div>\n\n\n        )\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}